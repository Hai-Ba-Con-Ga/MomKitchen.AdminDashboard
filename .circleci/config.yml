version: 2.1

jobs:
  scan:
    docker:
      - image: circleci/node:14

    steps:
      - checkout

      # Create a directory for SonarScanner and install it
      - run:
          name: Install SonarScanner
          command: |
            mkdir -p ~/.sonar
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip -O ~/.sonar/sonar-scanner-cli-4.6.2.2472-linux.zip
            unzip ~/.sonar/sonar-scanner-cli-4.6.2.2472-linux.zip -d ~/.sonar/
            echo 'export PATH=$PATH:$HOME/.sonar/sonar-scanner-4.6.2.2472-linux/bin' >> $BASH_ENV
            source $BASH_ENV

      # Perform code analysis with SonarQube
      - run:
          name: Run SonarQube Analysis
          command: |
            sonar-scanner \
              -Dsonar.login=$SONAR_TOKEN \
              -Dsonar.host.url=$SONAR_HOST_URL

  deploy_preview:
    docker:
      - image: circleci/node:latest
    environment:
      VERCEL_ORG_ID: team_5R7K2zgtOgiT8mFyEYNcWKOV
      VERCEL_PROJECT_ID: prj_BNbYirBayj39gSEVODhRlBIgIi3Z
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: sudo npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --token=$VERCEL_TOKEN

  deploy_production:
    docker:
      - image: circleci/node:latest
    environment:
      VERCEL_ORG_ID: team_5R7K2zgtOgiT8mFyEYNcWKOV
      VERCEL_PROJECT_ID: prj_BNbYirBayj39gSEVODhRlBIgIi3Z
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: sudo npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=production --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --prod --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - scan

      # Deploy to preview environment for feature branches
      - deploy_preview:
          filters:
            branches:
              ignore: /main/

      # Deploy to production for the main branch
      - deploy_production:
          filters:
            branches:
              only: /main/
